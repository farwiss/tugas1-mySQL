Stored Procedures, Stored Functions dan Trigger
Worksheet 6

Nama	: Farwis Ilmi

SOAL 6.1

1.	Buatlah Procedure untuk mengupdate harga_jual berdasarkan jenis produk tertentu (jenis_produk_id), beri nama procedure pro_naikan_harga memiliki parameter yang akan menerima argumen: Jenis Produk ID dan Persentase kenaikan harga.
CREATE PROCEDURE ...
DELIMITER $$
MariaDB [dbpos1]> CREATE PROCEDURE pro_naik(
    -> IN jenis_produk INT,
    -> IN persentasi_kenaikan INT )
    -> BEGIN
    -> UPDATE produk SET harga_jual = harga_jual + (harga_jual * persentasi_kenaikan / 100)
    -> WHERE jenis_produk_id = jenis_produk;
    -> END $$
DELIMITER ;
MariaDB [dbpos1]> CALL pro_naik(1,4); 4 disini adalah 4%
CREATE PROCEDURE pro_naikan_harga
2.	Buat fungsi umur dengan parameter yang menerima inputan argumen tipe data date dan mengembalikan hasil perhitungan umur (tahun sekarang dikurang tahun inputan) dengan tipe data bilangan bulat (integer) positif.
CREATE FUNCTION ...
MariaDB [dbpos1]> CREATE FUNCTION umur(tgl_lahir DATE)
    -> RETURNS INT
    -> BEGIN
    -> DECLARE umur INT;
    -> SET umur = YEAR(CURDATE()) - YEAR(tgl_lahir);
    -> RETURN umur;
    -> END $$
Query OK, 0 rows affected (0.038 sec)
MariaDB [dbpos1]> SELECT nama, umur(tgl_lahir) AS umur FROM pelanggan;
3.	Buat fungsi kategori_harga dengan parameter yang menerima inputan argument tipe data double dan mengembalikan tipe data string kategori harga berdasarkan: 
●	0 – 500rb : murah
●	500rb – 3 juta : sedang
●	3jt – 10 juta : mahal 
●	> 10 juta : sangat mahal

Microsoft Windows [Version 10.0.19041.630]
(c) 2020 Microsoft Corporation. All rights reserved.

C:\Users\ILMI>d:

D:\>cd xampp

D:\xampp>cd mysql\bin

D:\xampp\mysql\bin>mysql
ERROR 1045 (28000): Access denied for user 'Farwis Ilmi'@'localhost' (using password: NO)

D:\xampp\mysql\bin>mysql -u -p root
ERROR 1045 (28000): Access denied for user '-p'@'localhost' (using password: NO)

D:\xampp\mysql\bin>mysql -u root -p
Enter password:
Welcome to the MariaDB monitor.  Commands end with ; or \g.
Your MariaDB connection id is 1332
Server version: 10.4.32-MariaDB mariadb.org binary distribution

Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

MariaDB [(none)]> use dbpos_sib6
Database changed
MariaDB [dbpos_sib6]> DELIMITER $$
MariaDB [dbpos_sib6]> CREATE FUNCTION kategori_harga(harga double)
    -> RETURNS VARCHAR (20)
    -> BEGIN
    -> DECLARE kategori VARCHAR(20);
    -> IF harga <= 500000 THEN
    -> SET kategori = 'murah';
    -> ELSEIF harga > 500000 AND harga <= 300000 THEN
    -> SET kategori = 'sedang';
    -> ELSEIF harga > 300000 AND harga <= 100000 THEN
    -> SET kategori = 'mahal';
    -> ELSE
    -> SET kategori = 'sangat mahal';
    -> END IF;
    -> RETURN kategori;
    -> END $$
Query OK, 0 rows affected (0.214 sec)

MariaDB [dbpos_sib6]> DELIMITER ;
MariaDB [dbpos_sib6]> SELECT nama, kategori_harga(harga_jual) AS kategori FROM produk;
+-------------------+--------------+
| nama              | kategori     |
+-------------------+--------------+
| Televisi 21 inchs | sangat mahal |
| Televisi 40 inch  | sangat mahal |
| Kulkas 2 pintu    | sangat mahal |
| Meja Makan        | sangat mahal |
| Teh Kotak         | murah        |
| PC Desktop HP     | sangat mahal |
| Teh Botol         | murah        |
| Notebook Acer S   | sangat mahal |
| Notebook Lenovo   | sangat mahal |
| Laptop Lenovo     | sangat mahal |
| Kopi              | murah        |
| Teh Sosro 2       | murah        |
| Laptop Asus       | sangat mahal |
| Televisi 22 inc`  | sangat mahal |
| Televisi 23 inc   | sangat mahal |
| Televisi 24 inc   | sangat mahal |
| Televisi 25 inc   | sangat mahal |
| Televisi 27 inc   | sangat mahal |
| Televisi 28 inc   | sangat mahal |
| Televisi 29 inc   | sangat mahal |
| Teh Pucuk         | murah        |
| Teh Pucuk2        | murah        |
| Teh Botol 2       | murah        |
| Fruitea           | murah        |
| Laptop Asus ROG   | sangat mahal |
+-------------------+--------------+
25 rows in set (0.002 sec)


Soal 6.2

Trigger
1.	Buatlah bisnis proses pembayaran dengan menggunakan trigers, dengan skenario sebagai berikut :
- pelanggan memesan didalam table pesanan 
- dilanjutkan dengan proses pembayaran di table pembayaran
- didalam table pembayaran tambahkan kolom status_pembayaran
- jika pesanan sudah dibayar maka status pembayaran akan berubah menjadi lunas 


MariaDB [dbpos_sib6]> SELECT * FROM pesanan;
+----+------------+---------+--------------+
| id | tanggal    | total   | pelanggan_id |
+----+------------+---------+--------------+
|  1 | 2015-11-04 | 9720000 |            1 |
|  2 | 2015-11-04 |   17500 |            3 |
|  3 | 2015-11-04 |       0 |            6 |
|  4 | 2015-11-04 |       0 |            7 |
|  5 | 2015-11-04 |       0 |           10 |
|  6 | 2015-11-04 |       0 |            2 |
|  7 | 2015-11-04 |       0 |            5 |
|  8 | 2015-11-04 |       0 |            4 |
|  9 | 2015-11-04 |       0 |            8 |
| 10 | 2015-11-04 |       0 |            9 |
| 11 | 2015-11-04 |   30000 |            9 |
| 12 | 2020-11-04 |   40000 |            9 |
+----+------------+---------+--------------+
12 rows in set (0.000 sec)

MariaDB [dbpos_sib6]> DELIMITER $$
MariaDB [dbpos_sib6]> CREATE TRIGGER cek_pembayaran BEFORE INSERT ON pembayaran
    -> FOR EACH ROW
    -> BEGIN
    -> DECLARE total_bayar DECIMAL(10,2);
    -> DECLARE total_pesanan DECIMAL(10,2);
    -> SELECT SUM(jumlah) INTO total_bayar FROM pembayaran WHERE pesanan_id = NEW.pesanan_id;
    -> SELECT total INTO total_pesanan FROM pesanan WHERE id = NEW.pesanan_id;
    -> IF total_bayar + NEW.jumlah >= total_pesanan THEN
    -> SET NEW.status_pembayaran = 'Lunas';
    -> END IF;
    -> END $$
    
Query OK, 0 rows affected (0.107 sec)

MariaDB [dbpos_sib6]> DELIMITER ;

2.	Buatlah Stored Procedure dengan nama kurangi_stok untuk mengurangi stok produk. Stok berkurang sesuai dengan jumlah pesanan produk.

MariaDB [dbpos_sib6]> DELIMITER $$
MariaDB [dbpos_sib6]> CREATE PROCEDURE kurangi_stok(IN produk_id INT,
    -> IN jumlah_pesanan INT)
    -> BEGIN
    -> DECLARE stok_produk INT;
    -> SELECT stok INTO stok_produk FROM produk WHERE id = produk_id;
    -> SET stok_produk = stok_produk - jumlah_pesanan;
    -> IF stok_produk < 0 THEN
    -> SIGNAL SQLSTATE '45000'
    -> SET MESSAGE_TEXT = 'Stok Produk Tidak Mencukupi';
    -> END IF;
    -> UPDATE produk SET stok = stok_produk WHERE id = produk_id;
    -> END $$
Query OK, 0 rows affected (0.220 sec)

MariaDB [dbpos_sib6]> DELIMITER ;


3.	Buatlah Trigger dengan nama trig_kurangi_stok yang akan mengurangi stok produk jika terjadi transaksi pesanan oleh pelanggan (memanggil stored procedure kurangi_stok soal no 1).
Trigger ini aktif setelah trigger after_pesanan_items_insert (trigger pada contoh 3).

MariaDB [dbpos_sib6]> DELIMITER $$
MariaDB [dbpos_sib6]> CREATE TRIGGER trig_kurangi_stok AFTER INSERT ON pesanan_items
    -> FOR EACH ROW
    -> BEGIN
    -> CALL kurangi_stok(NEW.produk_id, NEW.qty);
    -> END $$
Query OK, 0 rows affected (0.096 sec)

MariaDB [dbpos_sib6]> DELIMITER ;
MariaDB [dbpos_sib6]> INSERT INTO pesanan_items(produk_id, pesanan_id, qty, harga) VALUES (7, 3, 2, 7000);
ERROR 1305 (42000): PROCEDURE dbpos_sib6.kurangin_stok does not exist
MariaDB [dbpos_sib6]> DELIMITER $$
MariaDB [dbpos_sib6]> CREATE TRIGGER trig_kurangi_stok AFTER INSERT ON pesanan_items
    -> FOR EACH ROW
    -> BEGIN
    -> CALL kurangi_stok(NEW.produk_id, NEW.qty);
    -> END $$

MariaDB [dbpos_sib6]> SELECT * FROM pesanan;
+----+------------+---------+--------------+
| id | tanggal    | total   | pelanggan_id |
+----+------------+---------+--------------+
|  1 | 2015-11-04 | 9720000 |            1 |
|  2 | 2015-11-04 |   17500 |            3 |
|  3 | 2015-11-04 |       0 |            6 |
|  4 | 2015-11-04 |       0 |            7 |
|  5 | 2015-11-04 |       0 |           10 |
|  6 | 2015-11-04 |       0 |            2 |
|  7 | 2015-11-04 |       0 |            5 |
|  8 | 2015-11-04 |       0 |            4 |
|  9 | 2015-11-04 |       0 |            8 |
| 10 | 2015-11-04 |       0 |            9 |
| 11 | 2015-11-04 |   30000 |            9 |
| 12 | 2020-11-04 |   40000 |            9 |
+----+------------+---------+--------------+
12 rows in set (0.000 sec)

MariaDB [dbpos_sib6]> CREATE TRIGGER cek_pembayaran BEFORE INSERT ON pembayaran
    -> FOR EACH ROW
    -> BEGIN
    -> DECLARE total_bayar DECIMAL(10,2);
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '' at line 4
MariaDB [dbpos_sib6]> DELIMITER $$
MariaDB [dbpos_sib6]> CREATE TRIGGER cek_pembayaran BEFORE INSERT ON pembayaran
    -> FOR EACH ROW
    -> BEGIN
    -> DECLARE total_bayar DECIMAL(10,2);
    -> DECLARE total_pesanan DECIMAL(10,2);
    -> SELECT SUM(jumlah) INTO total_bayar FROM pembayaran WHERE pesanan_id = NEW.pesanan_id;
    -> SELECT total INTO total_pesanan FROM pesanan WHERE id = NEW.pesanan_id;
    -> IF total_bayar + NEW.jumlah >= total_pesanan THEN
    -> SET NEW.status_pembayaran = 'Lunas';
    -> END IF;
    -> END $$
Query OK, 0 rows affected (0.107 sec)

MariaDB [dbpos_sib6]> DELIMITER ;


MariaDB [dbpos_sib6]> DELIMITER $$
MariaDB [dbpos_sib6]> CREATE PROCEDURE kurangi_stok(IN produk_id INT,
    -> IN jumlah_pesanan INT)
    -> BEGIN
    -> DECLARE stok_produk INT;
    -> SELECT stok INTO stok_produk FROM produk WHERE id = produk_id;
    -> SET stok_produk = stok_produk - jumlah_pesanan;
    -> IF stok_produk < 0 THEN
    -> SIGNAL SQLSTATE '45000'
    -> SET MESSAGE_TEXT = 'Stok Produk Tidak Mencukupi';
    -> END IF;
    -> UPDATE produk SET stok = stok_produk WHERE id = produk_id;
    -> END $$
Query OK, 0 rows affected (0.220 sec)

MariaDB [dbpos_sib6]> DELIMITER ;
MariaDB [dbpos_sib6]> DELIMITER $$
MariaDB [dbpos_sib6]> CREATE TRIGGER trig_kurangi_stok AFTER INSERT ON pesanan_items
    -> FOR EACH ROW
    -> BEGIN
    -> CALL kurangi_stok(NEW.produk_id, NEW.qty);
    -> END $$
Query OK, 0 rows affected (0.096 sec)

MariaDB [dbpos_sib6]> DELIMITER ;
MariaDB [dbpos_sib6]> INSERT INTO pesanan_items(produk_id, pesanan_id, qty, harga) VALUES (7, 3, 2, 7000);
Query OK, 1 row affected (0.073 sec)


MariaDB [dbpos_sib6]> SELECT * FROM pesanan_items;
+----+-----------+------------+------+---------+
| id | produk_id | pesanan_id | qty  | harga   |
+----+-----------+------------+------+---------+
|  1 |         1 |          1 |    1 | 5040000 |
|  2 |         3 |          1 |    1 | 4680000 |
|  3 |         5 |          2 |    5 |    3500 |
|  6 |         5 |          3 |   10 |    3500 |
|  7 |         1 |          3 |    1 | 5040000 |
|  9 |         5 |          5 |   10 |    3500 |
| 10 |         5 |          6 |   20 |    3500 |
| 15 |         7 |          3 |    2 |    7000 |
+----+-----------+------------+------+---------+
8 rows in set (0.001 sec)

MariaDB [dbpos_sib6]>